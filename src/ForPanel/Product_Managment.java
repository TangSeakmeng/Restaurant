/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ForPanel;

import ForDialog.Product_Category_Management;
import ForClass.DataConnection;
import ForClass.Product;
import ForClass.ProductCategory;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Tang Seakmeng
 */
public class Product_Managment extends javax.swing.JPanel {

    /**
     * Creates new form User_Management
     */
    public Product_Managment() {
        initComponents();
        
        ImageIcon im = new ImageIcon("C:\\Users\\Tang Seakmeng\\Desktop\\Project\\Restaurant and PUB\\Image\\NoImageFound.png");
        pictureBoxImage.setIcon(im);
        
        path = "C:\\Users\\Tang Seakmeng\\Desktop\\Project\\Restaurant and PUB\\Image\\NoImageFound.png";
        
        try 
        {
            String sql = "select CategoryName from tblCategory";
            Statement s = DataConnection.getDataCon().createStatement();
            ResultSet r = s.executeQuery(sql);
            
            ProductCategory pc = new ProductCategory();
            
            while(r.next())
            {
                pc.setCategoryName(r.getString(1));
                txtCategory.addItem(pc.getCategoryName());
            }
            
            r.close();
        } 
        catch (SQLException e) 
        {
            System.out.println(e.getMessage());
        }
        
        try
        {
            String sql = "select p.Barcode, p.Name, c.CategoryName, p.UnitInStock, p.CostOfSale, p.SalePrice, p.Image"
                    + " from tblProduct p join tblCategory c on p.CategoryId = c.Id where p.Id > 1";
            
            Statement s = DataConnection.getDataCon().createStatement();
            ResultSet r = s.executeQuery(sql);
            
            while(r.next())
            {
                subJTableProduct.addRow(r.getString(1), r.getString(2), r.getString(3), r.getString(4), r.getString(5), r.getString(6), r.getString(7));
            }
            
            r.close();
        } 
        catch (SQLException e) 
        {
            System.out.println(e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtBarCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtProductName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCategory = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtCostOfSale = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtSalePrice = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnUploadImage = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        spUnitInStock = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        subJTableProduct = new ForComponent.SubJTable();
        btnMoreCategory = new javax.swing.JButton();
        pictureBoxImage = new ForComponent.JPictureBox();

        setBackground(new java.awt.Color(204, 204, 204));
        setMinimumSize(new java.awt.Dimension(1830, 753));
        setPreferredSize(new java.awt.Dimension(1830, 753));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtBarCode.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtBarCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBarCodeKeyTyped(evt);
            }
        });
        add(txtBarCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 148, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Barcode :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, -1, -1));

        txtProductName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add(txtProductName, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 60, 148, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Product Name :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, -1, 20));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Category :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, -1, -1));

        txtCategory.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCategoryActionPerformed(evt);
            }
        });
        add(txtCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 100, 81, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Units In Stock :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        txtCostOfSale.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCostOfSale.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCostOfSaleKeyTyped(evt);
            }
        });
        add(txtCostOfSale, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, 148, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Cost Of Sale :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, -1, -1));

        txtSalePrice.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSalePrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSalePriceKeyTyped(evt);
            }
        });
        add(txtSalePrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 148, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Sale Price :");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Image :");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 270, -1, -1));

        btnUploadImage.setBackground(new java.awt.Color(0, 102, 204));
        btnUploadImage.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btnUploadImage.setForeground(new java.awt.Color(255, 255, 255));
        btnUploadImage.setText("Upload");
        btnUploadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadImageActionPerformed(evt);
            }
        });
        add(btnUploadImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 420, 140, 44));

        btnCancel.setBackground(new java.awt.Color(0, 153, 0));
        btnCancel.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        add(btnCancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 680, 130, 53));

        btnInsert.setBackground(new java.awt.Color(204, 51, 255));
        btnInsert.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btnInsert.setForeground(new java.awt.Color(255, 255, 255));
        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        add(btnInsert, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 610, 130, 57));

        btnDelete.setBackground(new java.awt.Color(255, 0, 51));
        btnDelete.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 610, 131, 57));

        btnUpdate.setBackground(new java.awt.Color(255, 102, 102));
        btnUpdate.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 680, 131, 57));

        spUnitInStock.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        spUnitInStock.setEditor(new javax.swing.JSpinner.NumberEditor(spUnitInStock, "#,##0.##"));
        spUnitInStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                spUnitInStockKeyTyped(evt);
            }
        });
        add(spUnitInStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 148, -1));

        subJTableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Barcode", "ProductName", "Category Name", "Unit In Stock", "Cost Of Sale", "Sale Price", "Image"
            }
        ));
        subJTableProduct.setRowHeight(30);
        subJTableProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                subJTableProductMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(subJTableProduct);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 1500, 710));

        btnMoreCategory.setBackground(new java.awt.Color(0, 153, 153));
        btnMoreCategory.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        btnMoreCategory.setForeground(new java.awt.Color(255, 255, 255));
        btnMoreCategory.setText("More");
        btnMoreCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoreCategoryActionPerformed(evt);
            }
        });
        add(btnMoreCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, -1, -1));

        pictureBoxImage.setImageMode(ForComponent.JPictureBox.mode.Zoom);

        javax.swing.GroupLayout pictureBoxImageLayout = new javax.swing.GroupLayout(pictureBoxImage);
        pictureBoxImage.setLayout(pictureBoxImageLayout);
        pictureBoxImageLayout.setHorizontalGroup(
            pictureBoxImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 138, Short.MAX_VALUE)
        );
        pictureBoxImageLayout.setVerticalGroup(
            pictureBoxImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 138, Short.MAX_VALUE)
        );

        add(pictureBoxImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 270, 140, 140));
    }// </editor-fold>//GEN-END:initComponents

    private String path;
    
    private void btnUploadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadImageActionPerformed
        JFileChooser jfc = new JFileChooser();
        int result = jfc.showOpenDialog(jfc);
        File f = jfc.getSelectedFile();
        path = f.toString();
        ImageIcon im = new ImageIcon(f.toString());
        pictureBoxImage.setIcon(im);
    }//GEN-LAST:event_btnUploadImageActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        try {
            Product product = new Product();
            product.setProductBarcode(txtBarCode.getText().trim());
            product.setProductName(txtProductName.getText().trim());

            product.setCategoryId(CategorySelectedId + "");
            product.setCategoryName(txtCategory.getSelectedItem().toString());

            product.setUnitInStock((Integer)spUnitInStock.getValue());
            product.setCostOfSale(Float.parseFloat(txtCostOfSale.getText()));
            product.setSalePrice(Float.parseFloat(txtSalePrice.getText()));
            product.setImagePath(path);
            
            subJTableProduct.addRow(product.getProductBarcode(), product.getProductName(), 
                    product.getCategoryName(), product.getUnitInStock(), product.getCostOfSale(), product.getSalePrice(), product.getImagePath());
            
            Product.addProductIntoDB(product);
        }  
        catch (NumberFormatException e) 
        {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private int CategorySelectedIndex;
    private int selectedRowIndex;
    private int CategorySelectedId;
    
    private void txtCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCategoryActionPerformed
        CategorySelectedIndex = txtCategory.getSelectedIndex();
        CategorySelectedId = ProductCategory.getCategoryIdUsingCategoryName(txtCategory.getItemAt(CategorySelectedIndex));
    }//GEN-LAST:event_txtCategoryActionPerformed

    private void subJTableProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_subJTableProductMouseClicked
        selectedRowIndex = subJTableProduct.getSelectedRow();
//        JOptionPane.showConfirmDialog(this, subJTableProduct.getRowAt(selectedRowIndex));
        Object[] r = subJTableProduct.getRowAt(selectedRowIndex);
        path = r[6] + "";
        ImageIcon im = new ImageIcon(path);
        pictureBoxImage.setIcon(im);
        
        txtBarCode.setText(r[0] + "");
        txtProductName.setText(r[1] + "");
        txtCategory.setSelectedItem(r[2] + "");
        spUnitInStock.setValue(Integer.parseInt(r[3] + ""));
        txtCostOfSale.setText(r[4] + "");
        txtSalePrice.setText(r[5] + "");
    }//GEN-LAST:event_subJTableProductMouseClicked
    
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Are you sure that you want to delete this item?");
        if(result == 0)
        {
            int countSelectedRow = subJTableProduct.getSelectedRowCount();
            
            for(int index = 0; index < countSelectedRow; index++)
            {
                Object[] r = subJTableProduct.getRowAt(selectedRowIndex);
                String barcode = r[0] + "";
                Product.deleteProductFromDB(barcode);
            }
            
            subJTableProduct.removeSelectedRow();
            
            JOptionPane.showMessageDialog(this, "Delete Successfully!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnMoreCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoreCategoryActionPerformed
        Product_Category_Management product_Category_Management = new Product_Category_Management(null, true);
        product_Category_Management.setVisible(true);
    }//GEN-LAST:event_btnMoreCategoryActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            Product product = new Product();
            product.setProductBarcode(txtBarCode.getText().trim());
            product.setProductName(txtProductName.getText().trim());

            product.setCategoryId(CategorySelectedId + "");
            product.setCategoryName(txtCategory.getSelectedItem() + "");

            product.setUnitInStock((Integer)spUnitInStock.getValue());
            product.setCostOfSale(Float.parseFloat(txtCostOfSale.getText()));
            product.setSalePrice(Float.parseFloat(txtSalePrice.getText()));
            product.setImagePath(path);
            
            subJTableProduct.setValueAt(product.getProductBarcode(), selectedRowIndex, 0);
            subJTableProduct.setValueAt(product.getProductName(), selectedRowIndex, 1);
            subJTableProduct.setValueAt(product.getCategoryName(), selectedRowIndex, 2);
            subJTableProduct.setValueAt(product.getUnitInStock(), selectedRowIndex, 3);
            subJTableProduct.setValueAt(product.getCostOfSale(), selectedRowIndex, 4);
            subJTableProduct.setValueAt(product.getSalePrice(), selectedRowIndex, 5);
            subJTableProduct.setValueAt(product.getImagePath(), selectedRowIndex, 6);
            
            Product.updateProductFromDB(product);
            
            JOptionPane.showMessageDialog(this, "Update Successfully!");
        } 
        catch (NumberFormatException e) 
        {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        clear();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtCostOfSaleKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCostOfSaleKeyTyped
//         && !(evt.getKeyCode() == KeyEvent.VK_BACK_SPACE)        
        
        if (!Character.isDigit(evt.getKeyChar()) && !(evt.getKeyChar() == KeyEvent.VK_PERIOD)) 
        {
            evt.consume();
        }

//        if (Character.isDigit(evt.getKeyChar())) 
//        {
//            evt.consume();
//        }
    }//GEN-LAST:event_txtCostOfSaleKeyTyped

    private void txtSalePriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSalePriceKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && !(evt.getKeyChar() == KeyEvent.VK_PERIOD)) 
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtSalePriceKeyTyped

    private void spUnitInStockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_spUnitInStockKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && !(evt.getKeyChar() == KeyEvent.VK_PERIOD)) 
        {
            evt.consume();
        }
    }//GEN-LAST:event_spUnitInStockKeyTyped

    private void txtBarCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarCodeKeyTyped
        if (!Character.isDigit(evt.getKeyChar())) 
        {
            evt.consume();
        }
    }//GEN-LAST:event_txtBarCodeKeyTyped

    private void clear()
    {
        txtBarCode.setText("");
        txtProductName.setText("");
        txtCategory.setSelectedIndex(0);
        spUnitInStock.setValue(0);
        txtSalePrice.setText("0");
        txtCostOfSale.setText("0");
        
        ImageIcon im = new ImageIcon("C:\\Users\\Tang Seakmeng\\Desktop\\Project\\Restaurant and PUB\\Image\\NoImageFound.png");
        pictureBoxImage.setIcon(im);
        
        path = "C:\\Users\\Tang Seakmeng\\Desktop\\Project\\Restaurant and PUB\\Image\\NoImageFound.png";
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnMoreCategory;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUploadImage;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private ForComponent.JPictureBox pictureBoxImage;
    private javax.swing.JSpinner spUnitInStock;
    private ForComponent.SubJTable subJTableProduct;
    private javax.swing.JTextField txtBarCode;
    private javax.swing.JComboBox<String> txtCategory;
    private javax.swing.JTextField txtCostOfSale;
    private javax.swing.JTextField txtProductName;
    private javax.swing.JTextField txtSalePrice;
    // End of variables declaration//GEN-END:variables
}
